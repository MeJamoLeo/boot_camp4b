#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;


int64_t solve(int64_t N, int64_t A, int64_t B) {
    if ((B-A)%2 == 0)
	return (B-A)/2;

    if (min(A, N-B+1) == A)
	return A + (B-A)/2;
    else
	return N-B+1 + (B-A)/2;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, A, B;
    std::cin >> N >> A >> B;
    auto ans = solve(N, A, B);
    std::cout << ans << '\n';
    return 0;
}

//
// (5, 2, 4)
//   2
//   A
// = = = = = 
//       B
//       4
// B-Aが偶数ならぴったり行く
// (B-A)/2
//
//
// (10, 5, 8)
//         5
//         A
// = = = = = = = = = = 
//               B
//               8
//               A
// = = = = = = = = = = 
//                   B
// A
// = = = = = = = = = = 
//         B
//   A
// = = = = = = = = = = 
//       B
//     A
// = = = = = = = = = = 
//     B
// B-Aが奇数なら
// 	if (min(A, N-B+1) == A)
// 		A + (B-A)/2
// 	else
// 		N-B+1 + (B-A)/2
//
//
//
